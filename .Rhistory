}
}
weighted_index(2.5)
weighted_index(2)
weighted_index <- function(r){
if(1 <= r && r <= 43 && length(r)==1){
x1[r]*w1+x2[r]*w2+x3[r]*w3+x4[r]*w4
}
else{
print("Judge does not exist")
}
}
weighted_index(2.5)
weighted_index <- function(r){
if(1 <= r && r <= 43 && length(r)==0L){
x1[r]*w1+x2[r]*w2+x3[r]*w3+x4[r]*w4
}
else{
print("Judge does not exist")
}
}
weighted_index(2)
weighted_index <- function(r){
if(1 <= r && r <= 43 && !length(r)){
x1[r]*w1+x2[r]*w2+x3[r]*w3+x4[r]*w4
}
else{
print("Judge does not exist")
}
}
weighted_index(2)
weighted_index(2.5)
weighted_index <- function(r){
if(1 <= r && r <= 43 && r == as.integer(r)){
x1[r]*w1+x2[r]*w2+x3[r]*w3+x4[r]*w4
}
else{
print("Judge does not exist")
}
}
weighted_index(2.5)
weighted_index(2)
weighted_index(43)
weighted_index(44)
weighted_index <- function(r){
if(1 <= r && r <= 43 && r == as.integer(r)){
x1[r]*w1+x2[r]*w2+x3[r]*w3+x4[r]*w4
}
else{
print("Judge does not exist")
}
}
weighted_index(1)
weighted_index(1.5)
knitr
library()
install.packages("knitr")
judgerating <- USJudgeRatings
hist(judgerating)
Calculating the index for Judge `r print("[r]` in row 1 returns `r weighted_index(1)`
USJudgeRatings
View(judgerating)
View(judgerating)
weighted_index(1)
weighted_index(1:43) #for all Judges
Calculating the index for Judge `r print("USJudgeRatings[1,0]")` in row 1 returns `r weighted_index(1)`
mean(USJudgeRatings$INTG)
mean(USJudgeRatings$INTG,PREP)
mean(USJudgeRatings$INTG)
mean(USJudgeRatings$PREP)
mean(USJudgeRatings$ORAL)
mean(USJudgeRatings$PHYS)
hist(USJudgeRatings$INTG)
hist(USJudgeRatings$INTG)
hist(USJudgeRatings$PREP)
hist(USJudgeRatings$ORAL)
hist(USJudgeRatings$PHYS)
hist(USJudgeRatings$PHYS)
range(USJudgeRatings$INTG)
row.names(USJudgeRatings[0,1]
row.names(USJudgeRatings[0,1])
row.names("USJudgeRatings"[0,1])
USJudgeRatings[0,1]
USJudgeRatings[2,1]
USJudgeRatings[2,0]
USJudgeRatings[1,0]
USJudgeRatings[2,2]
USJudgeRatings[2,2]
row.names(1)
row.names(USJudgesRatings)
row.names(USJudgesRatings[1])
usjudges <- USJudgeRatings
row.names(usjudges)
row.names(usjudges[1])
row.names(usjudges[1,1])
row.names(usjudges[2,1])
usjudges <- USJudgeRatings
row.names(usjudges)
usjudges <- USJudgeRatings
names <- row.names(usjudges)
x1 <- USJudgeRatings$INTG
IndexResults <- data.frame(names, x1)
View(IndexResults)
View(IndexResults)
View(IndexResults)
IndexResults
.Library
install.packages("maptools", "gpclip", "ggplot2", "RColorBrewer", "rgdal", "mapproj")
.libPaths("C:\Users\Fabian\Documents\R\win-library\3.2")
.libPaths("C:/Users/Fabian/Documents/R/win-library/3.2")
install.packages("maptools", "gpclip", "ggplot2", "RColorBrewer", "rgdal", "mapproj")
install.packages("gpclip")
install.packages("rgdal", lib="C:/Users/Fabian/Documents/R/win-library/3.2")
install. packages("mapproj")
install.packages("mapproj")
install.packages("maptools", "gpclip", "ggplot2", "RColorBrewer", "rgdal", "mapproj")
install.packages("maptools")
install.packages("gpclip")
install.packages("ggplot2")
install.packages("RColorBrewer")
install.packages("rgdal")
install.packages("mapproj")
library(maptools)
library(gpclib)
library(ggplot2)
library(RColorBrewer)
library(rgdal)
library(mapproj)
source('/RpackagesInstall')
install.packages("maptools")
install.packages("gpclip")
install.packages("ggplot2")
install.packages("RColorBrewer")
install.packages("rgdal")
install.packages("mapproj")
library(maptools)
library(gpclib)
library(ggplot2)
library(RColorBrewer)
library(rgdal)
library(mapproj)
install.packages("gpclip")
library(RColorBrewer)
install.packages(c("brew", "countrycode",
"devtools", "dplyr",
"ggplot2", "googleVis",
"knitr", "MCMCpack",
"repmis", "RCurl",
"rmarkdown", "texreg",
"tidyr", "WDI",
"xtable", "Zelig"))
install.packages("RSocrata"")
install.packages("RSocrata")
install.packages("RSocrata")
read.socrata("https://data.cityofchicago.org/Public-Safety/Police-Stations/z8bn-74gv")
read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
x <- read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
library("RSocrata")
x <- read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
install.packages("rio")
crime <- import("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
library("rio")
crime <- import("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
View(crime)
View(crime)
library("RSocrata")
x <-  read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
install.packages("httr")
install.packages("httr")
install.packages("dplyr")
install.packages("XML")
install.packages("stringr")
URL <- http://www.bbc.com/sport/winter-olympics/2014/medals/countries
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
install.packages("dplyr")
lib(dplyr)
lib(httr)
lib(XML)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
"medals-table-by-sport__countries_table"
library(dplyr)
library(httr)
library(XML)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
"medals-table-by-sport__countries_table"
tables
data <- as.data.frame(tables)
sort(data, v6)
descending <- arrange(data, desc("V6")
descending <- arrange(data, desc("V6")
descending <- arrange(data, desc(V6))
descending <- arrange(tables, desc(V6))
descending <- arrange(data, desc(data[6])
descending <- arrange(data, desc(data[6])
class(data)
descending <- arrange(data, desc(V6))
descending <- arrange(data, desc(V6))
descending <- arrange(data, desc(v6))
class(data$v6)
class(data$V6)
data <- as.data.frame(tables)
class(data$V6)
class(data$V6)
class(data$NULL.V6)
descending <- arrange(data, desc(NULL.v6))
descending <- arrange(data, desc(NULL.V6))
descending <- arrange(data, desc(NULL.V6))
descending <- arrange(data, desc(NULL.V6))
class(data$NULL.V6)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
data <- as.data.frame(tables)
class(data)
class(data$NULL.V6)
descending <- arrange(data, desc(NULL.V6))
descending
class(data$NULL.V6)
descending <- arrange(data, desc(as.numeric(data&NULL.V6)))
descending <- arrange(data, desc(as.numeric(data$NULL.V6)))
descending
descending <- arrange(data, desc(as.numeric(as.character(data$NULL.V6))))
descending
names(data) <- c('country', 'gold', 'silver', 'bronze', 'total')
descending <- arrange(data, desc(as.numeric(as.character(data$total))))
descending
descending <- arrange(data, desc(as.numeric(as.character(data$NULL.V6))))
library(dplyr)
library(httr)
library(XML)
## getting table "medals-table-by-sport__countries_table"
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
data <- as.data.frame(tables)
class(data)
class(data$NULL.V6)
descending <- arrange(data, desc(as.numeric(as.character(data$NULL.V6))))
descending
M1 <- (Prestige ~ Education, data = Prestige)
M1 <- (prestige ~ education, data = Prestige)
M1 <- (prestige ~ education data = Prestige)
M1 <- (prestige ~ education, lm, data = Prestige)
M1 <- lm(prestige ~ education, data = Prestige)
library("rio")
crime <- import("https://data.cityofchicago.org/resource/qjr3-bm53.json")
View(crime)
View(crime)
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
View(Census)
View(Census)
hist(Census, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
curve(dnorm(x, mean=mean(Murders), sd=sd(Murders)), add=TRUE, col="darkblue", lwd=2)
hist(Census, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
View(Census)
View(Census)
hist(hardship_index, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
hist(ca, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
hist(ca, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
hist(hardship_index, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
Census2 <- read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
library("RSocrata")
Census2 <- read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
Census2 <- read.socrata("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
Census1 <- read.socrata("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
Census1 <- read.socrata("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
library("RSocrata")
install.packages("RSocrata")
install.packages("RSocrata")
library("RSocrata")
Census1 <- read.socrata("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
hist(hardship_index , freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
PerCapitaIncome <- Census$per_capita_income_
hist(PerCapitaIncome, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
hist(PerCapitaIncome, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
PerCapitaIncome <- as.numeric(Census$per_capita_income_)
hist(PerCapitaIncome, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
Census2 <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json", stringsAsFactors=FALSE)
hist(PerCapitaIncome, freq=FALSE, main = "header")
hist(PerCapitaIncome, freq=TRUE, main = "header")
hist(ac_)
hist(ca_)
hist(PerCapitaIncome, freq=TRUE, main = "header")
curve(dnorm(x, mean=mean(PerCapitaIncome), sd=sd(PerCapitaIncome)), add=TRUE, col="darkblue", lwd=2)
hist(PerCapitaIncome, freq=FALSE, main = "header")
curve(dnorm(x, mean=mean(PerCapitaIncome), sd=sd(PerCapitaIncome)), add=TRUE, col="darkblue", lwd=2)
hist(PerCapitaIncome, freq=FALSE, main = "header")
curve(dnorm(x, mean=mean(PerCapitaIncome), sd=sd(PerCapitaIncome)), add=TRUE, col="darkblue", lwd=2)
hist(PerCapitaIncome, freq=TRUE, main = "header")
curve(dnorm(x, mean=mean(PerCapitaIncome), sd=sd(PerCapitaIncome)), add=TRUE, col="darkblue", lwd=2)
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
PerCapitaIncome <- as.numeric(Census$per_capita_income_)
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
library("rio")
library("rio")
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
PerCapitaIncome <- as.numeric(Census$per_capita_income_)
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
View(Census)
hist(hardship_index)
hist(Census$hardship_index)
hist(as.numeric(Census$hardship_index))
ChicagoMap <- qmap("Chicago", zoom = 10, maptype = "toner", source = "google")
ChicagoMap <- get_map(location = c(lon = -87.6747987, lat = 41.9654501), zoom = 10, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap +
geom_point(aes(x = District20$Longitude, y = District20$Latitude, colour = District20$Primary.Type,
size = District20$Primary.Type),
data = District20) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
library(repmis)
library(rio)
library(RSocrata)
library(foreign)
library(rio)
library(plyr)
library(GISTools)
library(rgeos)
library(knitr)
library(maptools)
library(ggmap)
library(ggplot2)
ChicagoMap <- qmap("Chicago", zoom = 10, maptype = "toner", source = "google")
ChicagoMap <- get_map(location = c(lon = -87.6747987, lat = 41.9654501), zoom = 10, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap +
geom_point(aes(x = District20$Longitude, y = District20$Latitude, colour = District20$Primary.Type,
size = District20$Primary.Type),
data = District20) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
ChicagoMap <- qmap("Chicago", zoom = 10, maptype = "toner", source = "google")
ChicagoMap <- get_map(location = c(lon = -87.6747987, lat = 41.9654501), zoom = 10, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap +
geom_point(aes(x = PoliceDistrictCentroids$x, y = PoliceDistrictCentroids$y),
##colour = District20$Primary.Type, size = District20$Primary.Type),
data = District20) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
FinalMap <- ChicagoMap +
geom_point(aes(x = PoliceDistrictCentroids$x, y = PoliceDistrictCentroids$y),
##colour = District20$Primary.Type, size = District20$Primary.Type),
data = PoliceDistrictCentroids) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
source('~/.active-rstudio-document', echo=TRUE)
View(stations)
FinalMap <- ChicagoMap +
geom_point(aes(x = stations$coords.x1, y = stations$coords.x2),
##colour = District20$Primary.Type, size = District20$Primary.Type),
data = stations) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
print(FinalMap)
ChicagoMap <- qmap("Chicago", zoom = 10, maptype = "toner", source = "google")
print(ChicagoMap)
FinalMap <- ChicagoMap + geom_point(aes(x = stations$coords.x1, y = stations$coords.x2))
print(FinalMap)
ChicagoMap <- get_map(location = c(lon = -87.6747987, lat = 41.9654501), zoom = 10, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap + geom_point(aes(x = stations$coords.x1, y = stations$coords.x2))
ChicagoMap <- qmap("Chicago", zoom = 10, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap + geom_point(aes(x = stations$coords.x1, y = stations$coords.x2))
print(FinalMap)
ChicagoMap <- qmap("Chicago", zoom = 8, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap + geom_point(aes(x = stations$coords.x1, y = stations$coords.x2))
print(FinalMap)
source('~/.active-rstudio-document', echo=TRUE)
ChicagoMap <- get_map(location = c(lon = -87.6747987, lat = 41.9654501), zoom = 10, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap +
geom_point(aes(x = District20$Longitude, y = District20$Latitude),
##colour = District20$Primary.Type, size = District20$Primary.Type),
data = stations) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
FinalMap <- ChicagoMap +
geom_point(aes(x = District20$Longitude, y = District20$Latitude, colour = District20$Primary.Type, size = District20$Primary.Type),
data = stations) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
FinalMap <- ChicagoMap +
geom_point(aes(x = District20$Longitude, y = District20$Latitude, colour = District20$Primary.Type, size = District20$Primary.Type),
data = District20) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
ChicagoMap <- qmap("Chicago", zoom = 10, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap +
geom_point(aes(x = District20$Longitude, y = District20$Latitude, colour = District20$Primary.Type, size = District20$Primary.Type),
data = District20) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
ChicagoMap <- qmap("Chicago", zoom = 13, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap +
geom_point(aes(x = District20$Longitude, y = District20$Latitude, colour = District20$Primary.Type, size = District20$Primary.Type),
data = District20) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
ChicagoMap <- qmap("Chicago", zoom = 11, maptype = "toner", source = "stamen")
FinalMap <- ChicagoMap +
geom_point(aes(x = District20$Longitude, y = District20$Latitude, colour = District20$Primary.Type, size = District20$Primary.Type),
data = District20) +
xlab('') + ylab('') +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()) +
guides(size = guide_legend(title = 'Offense'),
colour = guide_legend(title = 'Offense'))
print(FinalMap)
|Crime Type|Description|
|********|**********|
|"ASSAULT"|Acts causing harm or intending to cause harm to the person|
#"BATTERY"
#"CRIM SEXUAL ASSAULT"
#"HOMICIDE"
#"INTIMIDATION"
#"KIDNAPPING"
#"OFFENSE INVOLVING CHILDREN"
#"ROBBERY"
#"SEX OFFENSE"
import(https://data.cityofchicago.org/resource/c7ck-438e.json)
import(https:\\data.cityofchicago.org\resource\c7ck-438e.json)
CrimeCodes <- import("https://data.cityofchicago.org/resource/c7ck-438e.json"")
CrimeCodes <- import("https://data.cityofchicago.org/resource/c7ck-438e.json")
CrimeCodes <- import("https://data.cityofchicago.org/resource/c7ck-438e.json")
View(CrimeCodes)
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=FALSE, main ="Relative Distance across Police Districts")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=TRUE, main ="Relative Distance across Police Districts")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=FALSE, main ="Relative Distance across Police Districts")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=TRUE, main ="Relative Distance across Police Districts")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=FALSE, main ="Relative Distance across Police Districts")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
reldistind <- as.numeric(agg_crime_type$rel_dist)
hist(reldistind, freq=TRUE, main ="Relative Distance for individual Police Districts")
curve(dnorm(x, mean=mean(reldistind), sd=sd(reldistind)), add=TRUE, col="darkblue", lwd=2)
reldiststa <- as.numeric(agg_crime_type_sta$rel_dist_sta)
hist(reldiststa, freq=FALSE, main ="Relative Distance to Police Station")
curve(dnorm(x, mean=mean(reldiststa), sd=sd(reldiststa)), add=TRUE, col="darkblue", lwd=2)
reldiststa <- as.numeric(agg_crime_type_sta$rel_dist_sta)
hist(reldiststa, freq=TRUE, main ="Relative Distance to Police Station")
curve(dnorm(x, mean=mean(reldiststa), sd=sd(reldiststa)), add=TRUE, col="darkblue", lwd=2)
reldistindsta <- as.numeric(agg_crime_type_sta$rel_dist_sta)
hist(reldistindsta, freq=TRUE, main ="Relative Distance for individual Police Districts")
curve(dnorm(x, mean=mean(reldistindsta), sd=sd(reldistindsta)), add=TRUE, col="darkblue", lwd=2)
```
