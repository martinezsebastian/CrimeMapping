total$center_x <- total$centroid_x.y
total$center_y <- total$centroid_y.y
total$x <- total$X.Coordinate
total$y <- total$Y.Coordinate
total$st_location_x <- total$coords.x1
total$st_location_y <- total$coords.x2
# Absolute Distance
## The Distance from the place where a crime was committed to the center of the police district is calculated.
total$y_dist <- total$y - total$center_y
total$x_dist <- total$x - total$center_x
total$x_st_dist <- total$x - total$st_location_x
total$y_st_dist <- total$y - total$st_location_y
total$distance <- sqrt((total$x_dist)^2+(total$y_dist)^2)
total$distance_sta <- sqrt((total$x_st_dist)^2+(total$y_st_dist)^2)
total$count <- 1
# NA values for distance are omitted from the analysis
total <- total[!(is.na(total$distance)),]
total <- total[!(is.na(total$distance_sta)),]
counter <- aggregate(count ~ District, data = total, FUN=mean)
# Relative Distance
## To determine the relative distances (crime farthest away=1)
## Data has to be adapted because distance needs to be calculated for each district separately.
### Loop to split the data set into smaller datasets, one for every district
district_list <- list()
for(i in counter$District)
{
temp <- total[total[,2]==i,]
nam <- paste("District", i, sep = "")
assign(nam, temp)
district_list[[nam]] <- temp
}
### Max distance is calculated and included into the data set
for(i in counter$District)
{
nam <- paste("District", i, sep = "")
temp <- district_list[[nam]]
temp$max_distance <- max(abs(temp$distance))
temp$max_distance_sta <- max(abs(temp$distance_sta))
assign(nam, temp)
district_list[[nam]] <- temp
}
### Different data frames are appended into a single big data set again.
Crime_Data <- ldply(district_list, data.frame)
Crime_Data$rel_dist <- Crime_Data$distance/Crime_Data$max_distance
Crime_Data$rel_dist_sta <- Crime_Data$distance_sta/Crime_Data$max_distance_sta
#Crime_Data <- Crime_Data[order(Crime_Data$rel_dist),]
##################################
##################################
## Close or Far away Crime
##################################
##################################
Crime_Data$half_distance  <- 2*Crime_Data$max_distance/3
Crime_Data$close <- ifelse(Crime_Data$distance>=Crime_Data$half_distance,1,0)
##################################
##################################
#CRIME GROUPING
# CRIMES THAT WERE CONSIDERED VIOLENT
#"ASSAULT"
#"BATTERY"
#"CRIM SEXUAL ASSAULT"
#"HOMICIDE"
#"INTIMIDATION"
#"KIDNAPPING"
#"OFFENSE INVOLVING CHILDREN"
#"ROBBERY"
#"SEX OFFENSE"
##################################
##################################
Crime_Data$violent <- ifelse(Crime_Data$Primary.Type=="ASSAULT" | Crime_Data$Primary.Type=="BATTERY" | Crime_Data$Primary.Type=="CRIM SEXUAL ASSAULT" | Crime_Data$Primary.Type=="HOMICIDE" | Crime_Data$Primary.Type=="INTIMIDATION" | Crime_Data$Primary.Type=="KIDNAPPING" | Crime_Data$Primary.Type=="OFFENSE INVOLVING CHILDREN" | Crime_Data$Primary.Type=="ROBBERY" | Crime_Data$Primary.Type=="SEX OFFENSE", 1,0)
###################
violent_probit1 <- glm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, family=binomial(link="probit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$close ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit2)
summary(violent_model1)
## ZELIG
Crime_Data$hardship <- as.integer(Crime_Data$hardship_index)
Crime_Data$close_ <- as.factor(Crime_Data$close)
Z1 <- zelig(close_ ~ hardship + violent, cite = FALSE, data = Crime_Data, model = 'logit')
summary(Z1)
setZ1 <- setx(Z1, hardship = 1:2)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
write.csv(Crime_Data$hardship, "hardship.csv")
battery_distance <- ifelse(Crime_Data$Primary.Type=="BATTERY",Crime_Data$rel_dist,NA)
battery_distance <- battery_distance[!(is.na(battery_distance))]
battery_distance_sta <- ifelse(Crime_Data$Primary.Type=="BATTERY",Crime_Data$rel_dist_sta,NA)
battery_distance_sta <- battery_distance_sta[!(is.na(battery_distance_sta))]
battery_distance_sta <- battery_distance_sta[order(battery_distance_sta)]
View(battery_distance_sta)
hist(battery_distance_sta, freq=FALSE, col="grey", main="Histogram for Battery")
#hist(battery_distance, freq=FALSE, add=TRUE)
#curve(dnorm(x, mean=mean(battery_distance), sd=sd(battery_distance)), add=TRUE, col="darkblue", lwd=2)
curve(dnorm(x, mean=mean(battery_distance_sta), sd=sd(battery_distance_sta)), add=TRUE, col="darkblue", lwd=2)
source('~/Dropbox/0. Hertie/3/Collaborative Social Science Data Analysis/GitHub/CrimeMapping/RSourceFiles/Presentation.R')
## NOTE: Running this file may take a few minutes because R will load ~340.000 observations (crime in the year 2012).
## Working Directory ##
# Create list of used working directories
possible_dir <- c('C:/Users/Fabian/Documents/GitHub/CrimeMapping', '/Users/SebastianMartinez/Dropbox/0. Hertie/3/Collaborative Social Science Data Analysis/GitHub/CrimeMapping/')
# Set to first valid directory in the possible_dir vector
repmis::set_valid_wd(possible_dir)
## Loading required packages ##
# If this file does not run, check/install required r packages.
library(repmis)
library(rio)
library(RSocrata)
library(foreign)
library(rio)
library(plyr)
library(GISTools)
library(rgeos)
library(knitr)
library(Zelig)
## R code to import the respective data files is sourced from TWO separate R file. The first one contains the crime data. NOTE that running this file may take short while because R will load ~340.000 crime observations for the year 2012! The second contains import code for all other data.
## Crime Data (NOTE: May take a few minutes)
source('RSourceFiles/DataImportCrime.R')
## Border Data & Controls
source('RSourceFiles/DataImportRest.R')
## To access the information contained in the shapefiles, the .dbf file is used.
## The shapefiles are loaded into R, and the Centroids of the polygons are calculated.
boundaries <- read.dbf("RSourceFiles/PoliceDistrict.dbf")
sids <- readShapePoly("RSourceFiles/PoliceDistrict.shp")
PoliceDistrictCentroids = as.data.frame(gCentroid(sids,byid=TRUE))
stations <- read.dbf("RSourceFiles/PoliceStationsDec2012.dbf")
stations_ <- readShapePoints("RSourceFiles/PoliceStationsDec2012.shp")
stations = as.data.frame(stations_)
## A plot of the districts with the centroids is generated
plot(sids)
points(coordinates(stations_), pch=1)
points(coordinates(sids),pch=2)
## Information is saved onto the boundaries data frame to be then merged with the additional information
boundaries$centroid_x <- PoliceDistrictCentroids$x
boundaries$centroid_y <- PoliceDistrictCentroids$y
# Similarly, information on the boundaries of the communities is added.
commareas_dbf <- read.dbf("RSourceFiles/CommAreas.dbf")
commareas <- readShapePoly("RSourceFiles/CommAreas.shp")
CommAreasCentroids <- as.data.frame(gCentroid(commareas,byid=TRUE))
## A plot of the community districts with the centroids is generated
plot(commareas)
points(coordinates(commareas),pch=1)
points(CommAreasCentroids,pch=2)
## Information is saved onto the boundaries data frame to be then merged with the additional information
commareas_dbf$centroid_x <- CommAreasCentroids$x
commareas_dbf$centroid_y <- CommAreasCentroids$y
## A new dataframe named "total" is created that contains all crime and census data. NOTE: Requires loading crime data!
## Contains 335481 obs. and 30 var.
total <- merge(crimes, census, by.x = "Community.Area", by.y = "ca")
## Data from the boundaries and the community areas with their respective centroids is merged with the crime and census data
total <- merge(total, boundaries, by.x = "District", by.y = "DIST_NUM")
total <- merge(total, commareas_dbf, by.x = "Community.Area", by.y = "AREA_NUM_1")
total <- merge(total, stations, by.x = "District", by.y = "DIST")
total$center_x <- total$centroid_x.y
total$center_y <- total$centroid_y.y
total$x <- total$X.Coordinate
total$y <- total$Y.Coordinate
total$st_location_x <- total$coords.x1
total$st_location_y <- total$coords.x2
# Absolute Distance
## The Distance from the place where a crime was committed to the center of the police district is calculated.
total$y_dist <- total$y - total$center_y
total$x_dist <- total$x - total$center_x
total$x_st_dist <- total$x - total$st_location_x
total$y_st_dist <- total$y - total$st_location_y
total$distance <- sqrt((total$x_dist)^2+(total$y_dist)^2)
total$distance_sta <- sqrt((total$x_st_dist)^2+(total$y_st_dist)^2)
total$count <- 1
# NA values for distance are omitted from the analysis
total <- total[!(is.na(total$distance)),]
total <- total[!(is.na(total$distance_sta)),]
counter <- aggregate(count ~ District, data = total, FUN=mean)
# Relative Distance
## To determine the relative distances (crime farthest away=1)
## Data has to be adapted because distance needs to be calculated for each district separately.
### Loop to split the data set into smaller datasets, one for every district
district_list <- list()
for(i in counter$District)
{
temp <- total[total[,2]==i,]
nam <- paste("District", i, sep = "")
assign(nam, temp)
district_list[[nam]] <- temp
}
### Max distance is calculated and included into the data set
for(i in counter$District)
{
nam <- paste("District", i, sep = "")
temp <- district_list[[nam]]
temp$max_distance <- max(abs(temp$distance))
temp$max_distance_sta <- max(abs(temp$distance_sta))
assign(nam, temp)
district_list[[nam]] <- temp
}
### Different data frames are appended into a single big data set again.
Crime_Data <- ldply(district_list, data.frame)
Crime_Data$rel_dist <- Crime_Data$distance/Crime_Data$max_distance
Crime_Data$rel_dist_sta <- Crime_Data$distance_sta/Crime_Data$max_distance_sta
#Crime_Data <- Crime_Data[order(Crime_Data$rel_dist),]
##################################
##################################
## Close or Far away Crime
##################################
##################################
Crime_Data$half_distance  <- 2*Crime_Data$max_distance/3
Crime_Data$close <- ifelse(Crime_Data$distance>=Crime_Data$half_distance,1,0)
##################################
##################################
#CRIME GROUPING
# CRIMES THAT WERE CONSIDERED VIOLENT
#"ASSAULT"
#"BATTERY"
#"CRIM SEXUAL ASSAULT"
#"HOMICIDE"
#"INTIMIDATION"
#"KIDNAPPING"
#"OFFENSE INVOLVING CHILDREN"
#"ROBBERY"
#"SEX OFFENSE"
##################################
##################################
Crime_Data$violent <- ifelse(Crime_Data$Primary.Type=="ASSAULT" | Crime_Data$Primary.Type=="BATTERY" | Crime_Data$Primary.Type=="CRIM SEXUAL ASSAULT" | Crime_Data$Primary.Type=="HOMICIDE" | Crime_Data$Primary.Type=="INTIMIDATION" | Crime_Data$Primary.Type=="KIDNAPPING" | Crime_Data$Primary.Type=="OFFENSE INVOLVING CHILDREN" | Crime_Data$Primary.Type=="ROBBERY" | Crime_Data$Primary.Type=="SEX OFFENSE", 1,0)
###################
violent_probit1 <- glm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, family=binomial(link="probit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$close ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit2)
summary(violent_model1)
##################################
####################################################################
####################################################################
####################################################################
###                  HERE!!!!!!!!!!!
####################################################################
####################################################################
####################################################################
####################################################################
##################################
## ZELIG
Crime_Data$hardship <- as.integer(Crime_Data$hardship_index)
Crime_Data$close_ <- as.factor(Crime_Data$close)
Z1 <- zelig(close_ ~ hardship + violent, cite = FALSE, data = Crime_Data, model = 'logit')
summary(Z1)
setZ1 <- setx(Z1, hardship = 1:2)
simZ1 <- sim(Z1, x = setZ1)
plot(simZ1)
fitted <- with(Crime_Data, data.frame(hardship=mean(as.integer(Crime_Data$hardship_index)),violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response')
kable(fitted)
violent_probit1 <- glm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, family=binomial(link="logit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$close ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit2)
summary(violent_model1)
fitted <- with(Crime_Data, data.frame(hardship=mean(as.integer(Crime_Data$hardship_index)),violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response')
kable(fitted)
fitted <- with(Crime_Data, data.frame(hardship=mean(as.integer(Crime_Data$hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response')
kable(fitted)
View(fitted)
summary(violent_probit1)
fitted$predicted <- predict(violent_probit1, newdata = fitted)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(Crime_Data$hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response')
kable(fitted)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(Crime_Data$hardship_index)), violent = c(0,1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response')
source('~/Dropbox/0. Hertie/3/Collaborative Social Science Data Analysis/GitHub/CrimeMapping/RSourceFiles/Presentation.R', echo=TRUE)
violent_probit1 <- glm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + as.factor(Crime_Data$violent), family=binomial(link="logit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$close ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit1)
summary(violent_model1)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(Crime_Data$hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response')
violent_probit1 <- glm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + as.factor(Crime_Data$violent), family=binomial(link="probit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$close ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit1)
summary(violent_model1)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(Crime_Data$hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response')
fitted$predicted <- predict(violent_probit1, newdata = fitted)
predict(violent_probit1, data.frame(hardship_index=mean(as.integer(Crime_Data$hardship_index)),violent=factor(1:2)))
Crime_Data$close <- ifelse(Crime_Data$distance>=Crime_Data$half_distance,2,1)
##################################
##################################
#CRIME GROUPING
# CRIMES THAT WERE CONSIDERED VIOLENT
#"ASSAULT"
#"BATTERY"
#"CRIM SEXUAL ASSAULT"
#"HOMICIDE"
#"INTIMIDATION"
#"KIDNAPPING"
#"OFFENSE INVOLVING CHILDREN"
#"ROBBERY"
#"SEX OFFENSE"
##################################
##################################
Crime_Data$violent <- ifelse(Crime_Data$Primary.Type=="ASSAULT" | Crime_Data$Primary.Type=="BATTERY" | Crime_Data$Primary.Type=="CRIM SEXUAL ASSAULT" | Crime_Data$Primary.Type=="HOMICIDE" | Crime_Data$Primary.Type=="INTIMIDATION" | Crime_Data$Primary.Type=="KIDNAPPING" | Crime_Data$Primary.Type=="OFFENSE INVOLVING CHILDREN" | Crime_Data$Primary.Type=="ROBBERY" | Crime_Data$Primary.Type=="SEX OFFENSE", 1,0)
###################
violent_probit1 <- glm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + as.factor(Crime_Data$violent), family=binomial(link="probit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$close ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit1)
summary(violent_model1)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(Crime_Data$hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response')
kable(fitted)
predict(violent_probit1, data.frame(hardship_index=mean(as.integer(Crime_Data$hardship_index)),violent=factor(1:2)))
predict(violent_probit1, data.frame(hardship_index=mean(as.integer(Crime_Data$hardship_index)),violent=factor(0:1)), interval="confidence")
fitted <- with(Crime_Data, data.frame(violent = factor(0:1), per_capita_income_=mean(as.integer(Crime_Data$per_capita_income_))))
fitted$predicted <- predict(violent_probit2, newdata = fitted, type = 'response')
kable(fitted)
violent_probit3 <- glm(Crime_Data$close ~  Crime_Data$violent, family=binomial(link="probit"), data=Crime_Data)
Crime_Data$close <- ifelse(Crime_Data$distance>=Crime_Data$half_distance,1,0)
violent_probit3 <- glm(Crime_Data$close ~  Crime_Data$violent, family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(violent = factor(0:1)))
fitted$predicted <- predict(violent_probit2, newdata = fitted, type = 'response')
)
kable(fitted)
violent_probit3 <- glm(Crime_Data$close ~  as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(per_capita_income_=mean(Crime_Data$per_capita_income_)))
fitted <- with(Crime_Data, data.frame(per_capita_income_=mean(as.integer(Crime_Data$per_capita_income_)))
}
fitted <- with(Crime_Data, data.frame(per_capita_income_=mean(as.integer(Crime_Data$per_capita_income_))))
fitted$predicted <- predict(violent_probit3, newdata = fitted, type = 'response')
fitted <- with(Crime_Data, data.frame(per_capita_income_=mean(as.integer(per_capita_income_))))
kable(fitted)
fitted$predicted <- predict(violent_probit3, newdata = fitted, type = 'response')
kable(fitted)
violent_probit1 <- glm(Crime_Data$close ~ as.integer(hardship_index) + as.factor(violent), family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(Crime_Data$hardship_index)), violent = factor(0:1)))
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response')
kable(fitted)
Z1 <- zelig(close ~ violent + hardship_index cite = FALSE, data = Crime_Data, model = 'logit')
Z1 <- zelig(close ~ violent + hardship_index, cite = FALSE, data = Crime_Data, model = 'logit')
setZ1 <- setx(Z1, hardship_index = 10:40)
Z1 <- zelig(close ~ as.factor(violent) + as.interger(hardship_index), cite = FALSE, data = Crime_Data, model = 'logit')
Z1 <- zelig(close ~ as.factor(violent) + as.integer(hardship_index), cite = FALSE, data = Crime_Data, model = 'logit')
setZ1 <- setx(Z1, hardship_index = 10:40)
setZ1 <- setx(Z1, as.integer(hardship_index) = 10:40)
Z1 <- zelig(close ~ violent + as.integer(hardship_index), cite = FALSE, data = Crime_Data, model = 'logit')
setZ1 <- setx(Z1, as.integer(hardship_index) = 10:40)
setZ1 <- setx(Z1, violent = 0:1)
setZ1 <- setx(Z1, violent = 0:1)
setZ1 <- setx(Z1, violent = 0:1)
Z1 <- zelig(close ~ violent + as.integer(hardship_index), cite = FALSE, data = Crime_Data, model = 'logit')
Z1 <- zelig(close ~ violent + as.integer(hardship_index), cite = FALSE, data = Crime_Data, model = 'logit')
setZ1 <- setx(Z1, violent = 0:1)
setZ1 <- setx(Z1, violent = factor(0:1))
## A plot of the districts with the centroids is generated
plot(sids)
points(coordinates(stations_), pch=1)
points(coordinates(sids),pch=2)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
Crime_Data$property <- ifelse(Crime_Data$Primary.Type=="ARSON" | Crime_Data$Primary.Type=="BURGLARY" | Crime_Data$Primary.Type=="CRIMINAL DAMAGE" | Crime_Data$Primary.Type=="CRIMINAL TRESPASS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT", 1,0)
property_probit1 <- glm(close ~ as.integer(hardship_index) + as.factor(property), family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), property = factor(0:1)))
fitted$predicted <- predict(property_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
Crime_Data$money <- ifelse(Crime_Data$Primary.Type=="PROSTITUTION" | Crime_Data$Primary.Type=="NARCOTICS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT" | Crime_Data$Primary.Type=="DECEPTIVE PRACTICE" | Crime_Data$Primary.Type=="GAMBLING", 1,0)
money_probit1 <- glm(close ~ as.integer(hardship_index) + as.factor(money), family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), money = factor(0:1)))
fitted$predicted <- predict(money_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
Crime_Data$half_distance  <- 1*Crime_Data$max_distance/3
Crime_Data$close <- ifelse(Crime_Data$distance>=Crime_Data$half_distance,1,0)
##################################
##################################
#CRIME GROUPING
# CRIMES THAT WERE CONSIDERED VIOLENT
#"ASSAULT"
#"BATTERY"
#"CRIM SEXUAL ASSAULT"
#"HOMICIDE"
#"INTIMIDATION"
#"KIDNAPPING"
#"OFFENSE INVOLVING CHILDREN"
#"ROBBERY"
#"SEX OFFENSE"
##################################
##################################
Crime_Data$violent <- ifelse(Crime_Data$Primary.Type=="ASSAULT" | Crime_Data$Primary.Type=="BATTERY" | Crime_Data$Primary.Type=="CRIM SEXUAL ASSAULT" | Crime_Data$Primary.Type=="HOMICIDE" | Crime_Data$Primary.Type=="INTIMIDATION" | Crime_Data$Primary.Type=="KIDNAPPING" | Crime_Data$Primary.Type=="OFFENSE INVOLVING CHILDREN" | Crime_Data$Primary.Type=="ROBBERY" | Crime_Data$Primary.Type=="SEX OFFENSE", 1,0)
Crime_Data$property <- ifelse(Crime_Data$Primary.Type=="ARSON" | Crime_Data$Primary.Type=="BURGLARY" | Crime_Data$Primary.Type=="CRIMINAL DAMAGE" | Crime_Data$Primary.Type=="CRIMINAL TRESPASS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT", 1,0)
Crime_Data$money <- ifelse(Crime_Data$Primary.Type=="PROSTITUTION" | Crime_Data$Primary.Type=="NARCOTICS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT" | Crime_Data$Primary.Type=="DECEPTIVE PRACTICE" | Crime_Data$Primary.Type=="GAMBLING", 1,0)
###################
violent_probit1 <- glm(close ~ as.integer(hardship_index) + as.factor(violent), family=binomial(link="probit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$close ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_probit3 <- glm(Crime_Data$close ~  as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit1)
summary(violent_model1)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
property_probit1 <- glm(close ~ as.integer(hardship_index) + as.factor(property), family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), property = factor(0:1)))
fitted$predicted <- predict(property_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
money_probit1 <- glm(close ~ as.integer(hardship_index) + as.factor(money), family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), money = factor(0:1)))
fitted$predicted <- predict(money_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
Crime_Data$half_distance  <- 4*Crime_Data$max_distance/5
Crime_Data$close <- ifelse(Crime_Data$distance>=Crime_Data$half_distance,1,0)
##################################
##################################
#CRIME GROUPING
# CRIMES THAT WERE CONSIDERED VIOLENT
#"ASSAULT"
#"BATTERY"
#"CRIM SEXUAL ASSAULT"
#"HOMICIDE"
#"INTIMIDATION"
#"KIDNAPPING"
#"OFFENSE INVOLVING CHILDREN"
#"ROBBERY"
#"SEX OFFENSE"
##################################
##################################
Crime_Data$violent <- ifelse(Crime_Data$Primary.Type=="ASSAULT" | Crime_Data$Primary.Type=="BATTERY" | Crime_Data$Primary.Type=="CRIM SEXUAL ASSAULT" | Crime_Data$Primary.Type=="HOMICIDE" | Crime_Data$Primary.Type=="INTIMIDATION" | Crime_Data$Primary.Type=="KIDNAPPING" | Crime_Data$Primary.Type=="OFFENSE INVOLVING CHILDREN" | Crime_Data$Primary.Type=="ROBBERY" | Crime_Data$Primary.Type=="SEX OFFENSE", 1,0)
Crime_Data$property <- ifelse(Crime_Data$Primary.Type=="ARSON" | Crime_Data$Primary.Type=="BURGLARY" | Crime_Data$Primary.Type=="CRIMINAL DAMAGE" | Crime_Data$Primary.Type=="CRIMINAL TRESPASS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT", 1,0)
Crime_Data$money <- ifelse(Crime_Data$Primary.Type=="PROSTITUTION" | Crime_Data$Primary.Type=="NARCOTICS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT" | Crime_Data$Primary.Type=="DECEPTIVE PRACTICE" | Crime_Data$Primary.Type=="GAMBLING", 1,0)
###################
violent_probit1 <- glm(close ~ as.integer(hardship_index) + as.factor(violent), family=binomial(link="probit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$close ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_probit3 <- glm(Crime_Data$close ~  as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$close ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit1)
summary(violent_model1)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
property_probit1 <- glm(close ~ as.integer(hardship_index) + as.factor(property), family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), property = factor(0:1)))
fitted$predicted <- predict(property_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
money_probit1 <- glm(close ~ as.integer(hardship_index) + as.factor(money), family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), money = factor(0:1)))
fitted$predicted <- predict(money_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
Crime_Data$half_distance  <- 1*Crime_Data$max_distance/5
Crime_Data$far <- ifelse(Crime_Data$distance>=Crime_Data$half_distance,1,0)
violent_probit1 <- glm(far ~ as.integer(hardship_index) + as.factor(violent), family=binomial(link="probit"), data=Crime_Data)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
debugSource('~/Dropbox/0. Hertie/3/Collaborative Social Science Data Analysis/GitHub/CrimeMapping/RSourceFiles/Presentation.R', echo=TRUE)
Crime_Data$half_distance  <- sqrt(2)*Crime_Data$max_distance/2
Crime_Data$far <- ifelse(Crime_Data$distance>=Crime_Data$half_distance,1,0)
##################################
##################################
#CRIME GROUPING
# CRIMES THAT WERE CONSIDERED VIOLENT
#"ASSAULT"
#"BATTERY"
#"CRIM SEXUAL ASSAULT"
#"HOMICIDE"
#"INTIMIDATION"
#"KIDNAPPING"
#"OFFENSE INVOLVING CHILDREN"
#"ROBBERY"
#"SEX OFFENSE"
##################################
##################################
Crime_Data$violent <- ifelse(Crime_Data$Primary.Type=="ASSAULT" | Crime_Data$Primary.Type=="BATTERY" | Crime_Data$Primary.Type=="CRIM SEXUAL ASSAULT" | Crime_Data$Primary.Type=="HOMICIDE" | Crime_Data$Primary.Type=="INTIMIDATION" | Crime_Data$Primary.Type=="KIDNAPPING" | Crime_Data$Primary.Type=="OFFENSE INVOLVING CHILDREN" | Crime_Data$Primary.Type=="ROBBERY" | Crime_Data$Primary.Type=="SEX OFFENSE", 1,0)
Crime_Data$property <- ifelse(Crime_Data$Primary.Type=="ARSON" | Crime_Data$Primary.Type=="BURGLARY" | Crime_Data$Primary.Type=="CRIMINAL DAMAGE" | Crime_Data$Primary.Type=="CRIMINAL TRESPASS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT", 1,0)
Crime_Data$money <- ifelse(Crime_Data$Primary.Type=="PROSTITUTION" | Crime_Data$Primary.Type=="NARCOTICS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT" | Crime_Data$Primary.Type=="DECEPTIVE PRACTICE" | Crime_Data$Primary.Type=="GAMBLING", 1,0)
###################
violent_probit1 <- glm(far ~ as.integer(hardship_index) + as.factor(violent), family=binomial(link="probit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$far ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_probit3 <- glm(Crime_Data$far ~  as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$far ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit1)
summary(violent_model1)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
Crime_Data$half_distance  <- 2*Crime_Data$max_distance/3
Crime_Data$far <- ifelse(Crime_Data$distance>=Crime_Data$half_distance,1,0)
##################################
##################################
#CRIME GROUPING
# CRIMES THAT WERE CONSIDERED VIOLENT
#"ASSAULT"
#"BATTERY"
#"CRIM SEXUAL ASSAULT"
#"HOMICIDE"
#"INTIMIDATION"
#"KIDNAPPING"
#"OFFENSE INVOLVING CHILDREN"
#"ROBBERY"
#"SEX OFFENSE"
##################################
##################################
Crime_Data$violent <- ifelse(Crime_Data$Primary.Type=="ASSAULT" | Crime_Data$Primary.Type=="BATTERY" | Crime_Data$Primary.Type=="CRIM SEXUAL ASSAULT" | Crime_Data$Primary.Type=="HOMICIDE" | Crime_Data$Primary.Type=="INTIMIDATION" | Crime_Data$Primary.Type=="KIDNAPPING" | Crime_Data$Primary.Type=="OFFENSE INVOLVING CHILDREN" | Crime_Data$Primary.Type=="ROBBERY" | Crime_Data$Primary.Type=="SEX OFFENSE", 1,0)
Crime_Data$property <- ifelse(Crime_Data$Primary.Type=="ARSON" | Crime_Data$Primary.Type=="BURGLARY" | Crime_Data$Primary.Type=="CRIMINAL DAMAGE" | Crime_Data$Primary.Type=="CRIMINAL TRESPASS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT", 1,0)
Crime_Data$money <- ifelse(Crime_Data$Primary.Type=="PROSTITUTION" | Crime_Data$Primary.Type=="NARCOTICS" | Crime_Data$Primary.Type=="THEFT" | Crime_Data$Primary.Type=="MOTOR VEHICLE THEFT" | Crime_Data$Primary.Type=="DECEPTIVE PRACTICE" | Crime_Data$Primary.Type=="GAMBLING", 1,0)
###################
violent_probit1 <- glm(far ~ as.integer(hardship_index) + as.factor(violent), family=binomial(link="probit"), data=Crime_Data)
violent_probit2 <- glm(Crime_Data$far ~  Crime_Data$violent + as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_probit3 <- glm(Crime_Data$far ~  as.integer(Crime_Data$per_capita_income_), family=binomial(link="probit"), data=Crime_Data)
violent_model1 <- lm(Crime_Data$far ~ as.integer(Crime_Data$hardship_index) + Crime_Data$violent, data=Crime_Data)
summary(violent_probit1)
summary(violent_model1)
fitted <- with(Crime_Data, data.frame(hardship_index=mean(as.integer(hardship_index)), violent = factor(0:1)))
fitted$predicted <- predict(violent_probit1, newdata = fitted, type = 'response', interval='confidence')
kable(fitted)
