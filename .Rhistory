USJudgeRatings[2,2]
USJudgeRatings[2,2]
row.names(1)
row.names(USJudgesRatings)
row.names(USJudgesRatings[1])
usjudges <- USJudgeRatings
row.names(usjudges)
row.names(usjudges[1])
row.names(usjudges[1,1])
row.names(usjudges[2,1])
usjudges <- USJudgeRatings
row.names(usjudges)
usjudges <- USJudgeRatings
names <- row.names(usjudges)
x1 <- USJudgeRatings$INTG
IndexResults <- data.frame(names, x1)
View(IndexResults)
View(IndexResults)
View(IndexResults)
IndexResults
.Library
install.packages("maptools", "gpclip", "ggplot2", "RColorBrewer", "rgdal", "mapproj")
.libPaths("C:\Users\Fabian\Documents\R\win-library\3.2")
.libPaths("C:/Users/Fabian/Documents/R/win-library/3.2")
install.packages("maptools", "gpclip", "ggplot2", "RColorBrewer", "rgdal", "mapproj")
install.packages("gpclip")
install.packages("rgdal", lib="C:/Users/Fabian/Documents/R/win-library/3.2")
install. packages("mapproj")
install.packages("mapproj")
install.packages("maptools", "gpclip", "ggplot2", "RColorBrewer", "rgdal", "mapproj")
install.packages("maptools")
install.packages("gpclip")
install.packages("ggplot2")
install.packages("RColorBrewer")
install.packages("rgdal")
install.packages("mapproj")
library(maptools)
library(gpclib)
library(ggplot2)
library(RColorBrewer)
library(rgdal)
library(mapproj)
source('/RpackagesInstall')
install.packages("maptools")
install.packages("gpclip")
install.packages("ggplot2")
install.packages("RColorBrewer")
install.packages("rgdal")
install.packages("mapproj")
library(maptools)
library(gpclib)
library(ggplot2)
library(RColorBrewer)
library(rgdal)
library(mapproj)
install.packages("gpclip")
library(RColorBrewer)
install.packages(c("brew", "countrycode",
"devtools", "dplyr",
"ggplot2", "googleVis",
"knitr", "MCMCpack",
"repmis", "RCurl",
"rmarkdown", "texreg",
"tidyr", "WDI",
"xtable", "Zelig"))
install.packages("RSocrata"")
install.packages("RSocrata")
install.packages("RSocrata")
read.socrata("https://data.cityofchicago.org/Public-Safety/Police-Stations/z8bn-74gv")
read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
x <- read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
library("RSocrata")
x <- read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
install.packages("rio")
crime <- import("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
library("rio")
crime <- import("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
View(crime)
View(crime)
library("RSocrata")
x <-  read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
install.packages("httr")
install.packages("httr")
install.packages("dplyr")
install.packages("XML")
install.packages("stringr")
URL <- http://www.bbc.com/sport/winter-olympics/2014/medals/countries
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
install.packages("dplyr")
lib(dplyr)
lib(httr)
lib(XML)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
"medals-table-by-sport__countries_table"
library(dplyr)
library(httr)
library(XML)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
"medals-table-by-sport__countries_table"
tables
data <- as.data.frame(tables)
sort(data, v6)
descending <- arrange(data, desc("V6")
descending <- arrange(data, desc("V6")
descending <- arrange(data, desc(V6))
descending <- arrange(tables, desc(V6))
descending <- arrange(data, desc(data[6])
descending <- arrange(data, desc(data[6])
class(data)
descending <- arrange(data, desc(V6))
descending <- arrange(data, desc(V6))
descending <- arrange(data, desc(v6))
class(data$v6)
class(data$V6)
data <- as.data.frame(tables)
class(data$V6)
class(data$V6)
class(data$NULL.V6)
descending <- arrange(data, desc(NULL.v6))
descending <- arrange(data, desc(NULL.V6))
descending <- arrange(data, desc(NULL.V6))
descending <- arrange(data, desc(NULL.V6))
class(data$NULL.V6)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
data <- as.data.frame(tables)
class(data)
class(data$NULL.V6)
descending <- arrange(data, desc(NULL.V6))
descending
class(data$NULL.V6)
descending <- arrange(data, desc(as.numeric(data&NULL.V6)))
descending <- arrange(data, desc(as.numeric(data$NULL.V6)))
descending
descending <- arrange(data, desc(as.numeric(as.character(data$NULL.V6))))
descending
names(data) <- c('country', 'gold', 'silver', 'bronze', 'total')
descending <- arrange(data, desc(as.numeric(as.character(data$total))))
descending
descending <- arrange(data, desc(as.numeric(as.character(data$NULL.V6))))
library(dplyr)
library(httr)
library(XML)
## getting table "medals-table-by-sport__countries_table"
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
names(tables)
data <- as.data.frame(tables)
class(data)
class(data$NULL.V6)
descending <- arrange(data, desc(as.numeric(as.character(data$NULL.V6))))
descending
M1 <- (Prestige ~ Education, data = Prestige)
M1 <- (prestige ~ education, data = Prestige)
M1 <- (prestige ~ education data = Prestige)
M1 <- (prestige ~ education, lm, data = Prestige)
M1 <- lm(prestige ~ education, data = Prestige)
library("rio")
crime <- import("https://data.cityofchicago.org/resource/qjr3-bm53.json")
View(crime)
View(crime)
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
View(Census)
View(Census)
hist(Census, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
curve(dnorm(x, mean=mean(Murders), sd=sd(Murders)), add=TRUE, col="darkblue", lwd=2)
hist(Census, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
View(Census)
View(Census)
hist(hardship_index, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
hist(ca, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
hist(ca, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
hist(hardship_index, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
Census2 <- read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
library("RSocrata")
Census2 <- read.socrata("https://data.cityofchicago.org/resource/vwwp-7yr9.json")
Census2 <- read.socrata("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
Census1 <- read.socrata("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
Census1 <- read.socrata("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
library("RSocrata")
install.packages("RSocrata")
install.packages("RSocrata")
library("RSocrata")
Census1 <- read.socrata("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
hist(hardship_index , freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
PerCapitaIncome <- Census$per_capita_income_
hist(PerCapitaIncome, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
hist(PerCapitaIncome, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
PerCapitaIncome <- as.numeric(Census$per_capita_income_)
hist(PerCapitaIncome, freq=FALSE, main = "Histogram of Arrests of Murders per 100,000 residents")
Census2 <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json", stringsAsFactors=FALSE)
hist(PerCapitaIncome, freq=FALSE, main = "header")
hist(PerCapitaIncome, freq=TRUE, main = "header")
hist(ac_)
hist(ca_)
hist(PerCapitaIncome, freq=TRUE, main = "header")
curve(dnorm(x, mean=mean(PerCapitaIncome), sd=sd(PerCapitaIncome)), add=TRUE, col="darkblue", lwd=2)
hist(PerCapitaIncome, freq=FALSE, main = "header")
curve(dnorm(x, mean=mean(PerCapitaIncome), sd=sd(PerCapitaIncome)), add=TRUE, col="darkblue", lwd=2)
hist(PerCapitaIncome, freq=FALSE, main = "header")
curve(dnorm(x, mean=mean(PerCapitaIncome), sd=sd(PerCapitaIncome)), add=TRUE, col="darkblue", lwd=2)
hist(PerCapitaIncome, freq=TRUE, main = "header")
curve(dnorm(x, mean=mean(PerCapitaIncome), sd=sd(PerCapitaIncome)), add=TRUE, col="darkblue", lwd=2)
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
PerCapitaIncome <- as.numeric(Census$per_capita_income_)
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
library("rio")
library("rio")
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
PerCapitaIncome <- as.numeric(Census$per_capita_income_)
Census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
View(Census)
hist(hardship_index)
hist(Census$hardship_index)
hist(as.numeric(Census$hardship_index))
kable(agg_crime, caption = "Aggregate Crime Statistics")
```{r}
kable(agg_crime, caption = "Aggregate Crime Statistics")
```
---
title: "Crime Statistics"
author: "Sebastian Martinez - Fabian Bohnenberger"
date: "November 13, 2015"
output: html_document
---
```{r}
kable(agg_crime, caption = "Aggregate Crime Statistics")
```
library(foreign)
library(rio)
library(knitr)
library(plyr)
library(GISTools)
library(rgeos)
setwd("/Users/SebastianMartinez/Dropbox/0. Hertie/3/Collaborative Social Science Data Analysis/GitHub/CrimeMapping/R Source files/")
# CRIME INFORMATION
## We use the whole data set available from the City fo Chicago Data Unit. There was a recent change in the API and it only allows the user to download
## 1000 observations, instead of the whole set of information. It can be downloaded from
## https://data.cityofchicago.org/Public-Safety/Crimes-2012/hx8q-mf9v
#crimes <- import("https://data.cityofchicago.org/resource/hx8q-mf9v.json")
crimes <- read.csv("Crimes2012.csv")
# Police Districts
## Police Districts are downloaded from
##
## as shapefiles. To access the information contained inside, the .dbf file associated to the shapefile was used.
## The shapefiles are loaded into R, and the Centroids of the polygons are calculated.
boundaries <- read.dbf("PoliceDistrict.dbf")
sids <- readShapePoly("PoliceDistrict.shp")
PoliceDistrictCentroids = as.data.frame(gCentroid(sids,byid=TRUE))
## A plot of the districts with the centroids is generated
plot(sids)
points(coordinates(sids),pch=1)
points(PoliceDistrictCentroids,pch=2)
## Information is saved onto the boundaries data frame to be then merged with the additional information
boundaries$centroid_x <- PoliceDistrictCentroids$x
boundaries$centroid_y <- PoliceDistrictCentroids$y
# Similarly, information for the boundaries of the communities are also added.
commareas_dbf <- read.dbf("CommAreas.dbf")
commareas <- readShapePoly("CommAreas.shp")
CommAreasCentroids <- as.data.frame(gCentroid(commareas,byid=TRUE))
## A plot of the community districts with the centroids is generated
plot(commareas)
points(coordinates(commareas),pch=1)
points(CommAreasCentroids,pch=2)
## Information is saved onto the boundaries data frame to be then merged with the additional information
commareas_dbf$centroid_x <- CommAreasCentroids$x
commareas_dbf$centroid_y <- CommAreasCentroids$y
# Census Data
## Data from the Census is downloaded and merged with the crimes information for 2012.
census <- import("https://data.cityofchicago.org/resource/kn9c-c2s2.json")
total <- merge(crimes, census, by.x = "Community.Area", by.y = "ca")
## Data from the boundaries and the community areas with their respective centroids is merged with the crime and census data
total <- merge(total, boundaries, by.x = "District", by.y = "DIST_NUM")
total <- merge(total, commareas_dbf, by.x = "Community.Area", by.y = "AREA_NUM_1")
### renaming
total$center_x <- total$centroid_x.y
total$center_y <- total$centroid_y.y
total$x <- total$X.Coordinate
total$y <- total$Y.Coordinate
# Distance
## The Distance from the place where a crime was committed to the center of the police district is calculated. This is done so that we can
## determine which crimes occur closer to the border of each district, and hence farthest away from the location of the police station for that district
total$y_dist <- total$y - total$center_y
total$x_dist <- total$x - total$center_x
total$distance <- sqrt((total$x_dist)^2+(total$y_dist)^2)
total$count <- 1
# NA values for distance are omitted from the analysis
total <- total[!(is.na(total$distance)),]
counter <- aggregate(count ~ District, data = total, FUN=mean)
# Relative Distance
## To determine the relative distances of where crimes are committed, the distance to the farthest
## crime in every district is determined, and then the relative distance is measured as the
## distance from every crime divided over the distance to the farthest away crime.
## This allows us to understand the position of every crime in relation to the police district where it
## occurred, instead of a level measurement.
### Loop to split the data set into smaller datasets, one for every district
district_list <- list()
for(i in counter$District)
{
temp <- total[total[,2]==i,]
nam <- paste("District", i, sep = "")
assign(nam, temp)
district_list[[nam]] <- temp
}
### Max distance is calculated and included into the data set
for(i in counter$District)
{
nam <- paste("District", i, sep = "")
temp <- district_list[[nam]]
temp$max_distance <- max(abs(temp$distance))
assign(nam, temp)
district_list[[nam]] <- temp
}
### Different data frames are appended into a single big data set again.
Crime_Data <- ldply(district_list, data.frame)
Crime_Data$rel_dist <- Crime_Data$distance/Crime_Data$max_distance
#Crime_Data <- Crime_Data[order(Crime_Data$rel_dist),]
# Aggregate descriptive statistics
## A "Collapse" is done on the relative distance by District and by typo of crime, and then
## to only types of crime to see if there is a relationship between they occur in relation to the
## border of the district
agg_crime_type <- aggregate(rel_dist ~ District*Primary.Type, data=Crime_Data, FUN=mean)
agg_crime_type$number <- aggregate(count ~ District*Primary.Type, data=Crime_Data, FUN=sum)
agg_crime <- aggregate(rel_dist ~ Primary.Type, data=agg_crime_type, FUN=mean)
agg_crime$count <- aggregate(count ~ Primary.Type, data=Crime_Data, FUN=sum)
agg_crime <- agg_crime[order(agg_crime$rel_dist),]
library(maptools)
library(ggmap)
library(ggplot2)
gpclibPermit()
area <- readShapePoly("PoliceDistrict.shp")
mapImage <- get_map(location = c(lon = -87.6, lat = 41.8), color = "color", source = "google", zoom = 10)
areapoints <- fortify(area)
head(area)
ggmap(mapImage) + geom_polygon(aes(x = long, y = lat, group = group), data = areapoints, alpha = 0.5) + labs(x = "Longitude", y = "Latitude")
agg_crime_type <- aggregate(rel_dist ~ District*Primary.Type, data=Crime_Data, FUN=mean)
agg_crime_type$number <- aggregate(count ~ District*Primary.Type, data=Crime_Data, FUN=sum)
agg_crime <- aggregate(rel_dist ~ Primary.Type, data=agg_crime_type, FUN=mean)
agg_crime$count <- aggregate(count ~ Primary.Type, data=Crime_Data, FUN=sum)
agg_crime <- agg_crime[order(agg_crime$rel_dist),]
---
title: 'Collaborative Research: Spatial Distribution of Crime as a Function of the
Demarcation of Police Power - Pair assignment 3'
author: "Fabian Bohnenberger and Sebastian Martinez"
date: "November 13, 2015"
output: html_document
bibliography: literature/crimemapping_literature.bib
---
```{r, include=FALSE}
## NOTE: Running this file may take a few minutes because R will load ~340.000 observations!
## Working Directory ##
# Create list of used working directories
possible_dir <- c('C:/Users/Fabian/Documents/GitHub/CrimeMapping', '/Users/SebastianMartinez/Dropbox/0. Hertie/3/Collaborative Social Science Data Analysis/GitHub/CrimeMapping/')
# Set to first valid directory in the possible_dir vector
repmis::set_valid_wd(possible_dir)
## Loading required packages ##
# If this file does not run, check/install required r packages.
library(repmis)
library(rio)
library(RSocrata)
library(foreign)
library(rio)
library(plyr)
library(GISTools)
library(rgeos)
library(knitr)
```
```{r setup, include=FALSE}
## knitr caching options
##knitr::opts_chunk$set(cache=TRUE)
```
## Summary
...
## Research Aim and Methodology
For a detailed literature overview and our methodology, please see our [Research Proposal](https://rawgit.com/martinezsebastian/CrimeMapping/master/Proposal.html).
## Data Gathering
The main source for accessing data for this research project is the [Data Portal of the City of Chicago](data.cityofchicago.org). The website provides access to government data on the City departments, services, facilities and performance and also allows access via an API. The [Socrata Open Data API](https://github.com/chicago) can be used to load the data directly into R. To import the information, we rely on R's "Rio" package, which features the "import" function.
...
### Overview of data used in this project
Because of data limitations on our control variables, our research focuses on the years 2008-2012. For this timeframe, Census data is available on the Data Portal that provides a more comprehensive overview of the socioeconomic characteristics. Also, recent data on other potential control variables is only partially available from 2012 to present. At the moment, we only look at the crime data of the year 2012 (~335.000 observations).
1. Crimes (2001 to present)
This [dataset on crime in Chicago](https://data.cityofchicago.org/Public-Safety/Crimes-2001-to-present/ijzp-q8t2) includes information on all crimes that were reported in the city from 2001 until 2015. It includes the date and time, the "primary type" of the crime (e.g. theft, arson, narcotics), a short description (e.g. type of weapon used, broad indication of the value stolen), and whether there has been an arrest. Additionally, it provides us with detailed data on the location of the crime, including latitude and longitude as well as in which police beat and district and in which community district the crime occurred. It also includes a specific location description (e.g. sidewalk, office building or school).
2. District and community border data
For our research project, information on borders of police districts and "communities" is crucial. Information on [police districts](https://data.cityofchicago.org/Public-Safety/Boundaries-Police-Districts-current-/fthy-xz3r) is important because we are interested in the spatial distribution of crime as a function of the location of police stations and the organizational delineation of police power. [Community borders](https://data.cityofchicago.org/Facilities-Geographic-Boundaries/Boundaries-Community-Areas-current-/cauq-8yn6) are important because most socioeconomic data available on the Chicago Data Portal is aggregated on the community level. This does also include information on age distributions, health, as well as organizational statistics like abandoned buildings, land use and energy consumption.
3. Control variables (including socioeconomic data, esp. 2008-2012)
We rely on a regression to explain the occurence of crime at specific locations as a function of the spatial allocation of police force in a city. Our dependent variable is the occurence of specific crimes. Independent variables are the distance to the main and support police stations as well as the distance to the center of the police district. For the regression, we have to control for the specific characteristics of the police districts in question that affect crime. Economic and demographic factors in each city area (community level data) must be considered, as well as other imortant variables. The City of Chicago Data Portal offers information on the following characteristics of communities:
- [Census Data 2008-2012](https://data.cityofchicago.org/Health-Human-Services/Census-Data-Selected-socioeconomic-indicators-in-C/kn9c-c2s2), especially focusing on certain socioeconomic indicators (percent of housing crowded, percent households below poverty line, percentage aged 16+ unemployed, percentage aged 25+ without highschool diploma, percentage aged under 18 or over 64, per capita income, and a weighted "hardship index". Further explanation on the dataset can be accessed [here](https://data.cityofchicago.org/api/views/fwb8-6aw5/files/A5KBlegGR2nWI1jgP6pjJl32CTPwPbkl9KU3FxlZk-A?download=true&filename=P:\EPI\OEPHI\MATERIALS\REFERENCES\ECONOMIC_INDICATORS\Dataset_Description_socioeconomic_indicators_2012_FOR_PORTAL_ONLY.pdf)
- Additional information on the community level can be found in this [public health statistics dataset](https://data.cityofchicago.org/Health-Human-Services/Public-Health-Statistics-Selected-public-health-in/iqnk-2tcu), which not only provides information on birth rates and a number of diseases, but also lists environment or poverty-related diseases (e.g. childhood lead poisoning), the teen birth rate and includes data on unemployment levels on the community level. This [dataset](https://data.cityofchicago.org/Health-Human-Services/Public-Health-Statistics-Life-Expectancy-By-Commun/qjr3-bm53) provides additional information on the life expectancy on the community level. Additionally, the Data Portal includes relevant [data](https://data.cityofchicago.org/Community-Economic-Development/Vacant-Properties-by-Community-Area/cjr7-qyw5) like the number of vacant properties on the community level.
- Other datasets on the community level are: Data on [energy use](https://data.cityofchicago.org/Environment-Sustainable-Development/Average-Electricity-Usage-per-Square-Foot-by-Commu/usfg-z9mx) and data on [special empowerment zones](https://data.cityofchicago.org/Community-Economic-Development/Boundaries-Empowerment-Zones/m6ef-sjkj) across districts.
- The City of Chicago also offers information on police funding over the years on a district level. It is, however, not easily discernible whether year-to-year budget changes are actually funding active police work or are, for example, neccessary to cover pensions. Also, the allocation of funding to specific districts cannot be fully ascertained based on the provided data.
- There are, however, some factors that are not readily measurable or for which no data exists and we need to make indirect assumptions (e.g. citizens attitude towards crime, crime reporting practices of the citizenry, family cohesiveness, cultural characteristics) See also our Proposal for a more comprehensive list of important control variables.
### Data collection
Data can be collected by two ways: using the City of Chicago Data Portal's recommended "RSocrata" package or relying on the "Rio" package.
```{r, echo=FALSE}
## R code to import the respective data files is sourced from TWO separate R file. The first one contains the crime data. NOTE that running this file may take a short while because R will load ~340.000 observations for the year 2012! The second contains all other data.
## Crime Data (NOTE: May take a few minutes)
source('RSourceFiles/DataImportCrime.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(maptools)
library(ggmap)
library(ggplot2)
gpclibPermit()
area <- readShapePoly("PoliceDistrict.shp")
mapImage <- get_map(location = c(lon = -87.6, lat = 41.8), color = "color", source = "google", zoom = 10)
areapoints <- fortify(area)
head(area)
ggmap(mapImage) + geom_polygon(aes(x = long, y = lat, group = group), data = areapoints, alpha = 0.5) + labs(x = "Longitude", y = "Latitude")
install-packages(ggmap)
install.packages(ggmap)
install.packages("ggmap")
library(maptools)
library(ggmap)
library(ggplot2)
gpclibPermit()
area <- readShapePoly("PoliceDistrict.shp")
mapImage <- get_map(location = c(lon = -87.6, lat = 41.8), color = "color", source = "google", zoom = 10)
areapoints <- fortify(area)
head(area)
ggmap(mapImage) + geom_polygon(aes(x = long, y = lat, group = group), data = areapoints, alpha = 0.5) + labs(x = "Longitude", y = "Latitude")
kable(agg_crime, caption = "Aggregate Crime Statistics")
View(agg_crime)
View(agg_crime)
View(agg_crime_type)
View(agg_crime_type)
View(agg_crime)
library(maptools)
library(ggmap)
library(ggplot2)
gpclibPermit()
area <- readShapePoly("PoliceDistrict.shp")
mapImage <- get_map(location = c(lon = -87.6, lat = 41.8), color = "color", source = "google", zoom = 10)
areapoints <- fortify(area)
head(area)
ggmap(mapImage) + geom_polygon(aes(x = long, y = lat, group = group), data = areapoints, alpha = 0.5) + labs(x = "Longitude", y = "Latitude")
library(maptools)
library(ggmap)
library(ggplot2)
gpclibPermit()
area <- readShapePoly("RSourceFiles/PoliceDistrict.shp")
mapImage <- get_map(location = c(lon = -87.6, lat = 41.8), color = "color", source = "google", zoom = 10)
areapoints <- fortify(area)
head(area)
ggmap(mapImage) + geom_polygon(aes(x = long, y = lat, group = group), data = areapoints, alpha = 0.5) + labs(x = "Longitude", y = "Latitude")
library(maptools)
library(ggmap)
library(ggplot2)
gpclibPermit()
area <- readShapePoly("RSourceFiles/PoliceDistrict.shp")
mapImage <- get_map(location = c(lon = -87.6, lat = 41.8), color = "color", source = "google", zoom = 10)
areapoints <- fortify(area)
head(area)
ggmap(mapImage) + geom_polygon(aes(x = long, y = lat, group = group), data = areapoints, alpha = 0.5) + labs(x = "Longitude", y = "Latitude")
print(agg_crime)
print(agg_crime)
View(agg_crime)
hist(as.numeric(agg_crime$Primary.Type))
hist(agg_crime$Primary.Type)
hist(agg_crime$rel_distance)
hist(as.numeric(agg_crime$rel_distance))
hist(as.numeric(agg_crime$rel_dist))
hist(as.numeric(agg_crime$rel_dist, freq=TRUE, main ="Relative Distance between Crime and Police Station"))
hist(as.numeric(agg_crime$rel_dist, freq=FALSE, main ="Relative Distance between Crime and Police Station"))
hist(as.numeric(agg_crime$rel_dist, freq=TRUE, main ="Relative Distance between Crime and Police Station"))
hist(reldist, freq=TRUE, main ="Relative Distance between Crime and Police Station"))
hist(reldist, freq=TRUE, main ="Relative Distance between Crime and Police Station")
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=TRUE, main ="Relative Distance between Crime and Police Station")
hist(reldist, freq=FALSE, main ="Relative Distance between Crime and Police Station")
hist(reldist, freq=TRUE, main ="Relative Distance between Crime and Police Station")
hist(reldist, freq=FALSE, main ="Relative Distance between Crime and Police Station")
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=FALSE, main ="Relative Distance between Crime and Police Station")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
View(agg_crime_type)
View(agg_crime_type)
reldistind <- as-numeric(agg_crime_type$rel_dist)
hist(reldistind, freq=FALSE, main ="Relative Distance between Crime Types and District Center across Police Districts")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
reldistind <- as-numeric(agg_crime_type$rel_dist)
hist(reldistind, freq=FALSE, main ="Relative Distance between Crime Types and District Center across Police Districts")
curve(dnorm(x, mean=mean(reldistind), sd=sd(reldistind)), add=TRUE, col="darkblue", lwd=2)
reldistind <- as.numeric(agg_crime_type$rel_dist)
hist(reldistind, freq=FALSE, main ="Relative Distance between Crime Types and District Center across Police Districts")
curve(dnorm(x, mean=mean(reldistind), sd=sd(reldistind)), add=TRUE, col="darkblue", lwd=2)
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=FALSE, main ="Relative Distance between Crime Types and District Center across Police Districts")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
reldistind <- as.numeric(agg_crime_type$rel_dist)
hist(reldistind, freq=FALSE, main ="Relative Distance between Crime Types and District Center for individual Police Districts")
curve(dnorm(x, mean=mean(reldistind), sd=sd(reldistind)), add=TRUE, col="darkblue", lwd=2)
View(agg_crime)
table(agg_crime)
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=FALSE, main ="Relative Distance across Police Districts")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
reldist <- as.numeric(agg_crime$rel_dist)
hist(reldist, freq=TRUE, main ="Relative Distance across Police Districts")
curve(dnorm(x, mean=mean(reldist), sd=sd(reldist)), add=TRUE, col="darkblue", lwd=2)
?"table"
